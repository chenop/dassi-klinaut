{"version":3,"sources":["assets/main.jpg","components/Gallery.js","desktop/LeftSide.js","components/Title.js","components/ContactUs.js","components/Bio.js","desktop/RightSide.js","desktop/DesktopLayout.js","mobile/MobileLayout.js","Container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Image","styled","img","Gallery","src","mainImage","alt","Container","div","props","color","withTheme","theme","palette","primary","main","Text","fontSize","Title","WButton","Button","ContactUs","variant","Bio","DesktopLayout","MobileLayout","useTheme","isDesktop","useMediaQuery","breakpoints","up","jss","create","plugins","jssPreset","rtl","App","createMuiTheme","direction","purple","secondary","grey","typography","fontFamily","ThemeProvider","StylesProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wGAAAA,EAAOC,QAAU,IAA0B,kC,oUCI3C,IAAMC,EAAQC,IAAOC,IAAV,KAWIC,EANC,WACZ,OACI,kBAACH,EAAD,CAAOI,IAAKC,IAAYC,IAAK,Q,yGCNrC,IAAMC,EAAYN,IAAOO,IAAV,KAEL,SAAAC,GAAK,OAAIA,EAAMC,SAWVC,eARE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAClB,OACC,kBAACL,EAAD,CAAWG,MAAOE,EAAMC,QAAQC,QAAQC,MACvC,kBAAC,EAAD,U,wWCVH,IAAMR,EAAYN,IAAOO,IAAV,KASTQ,EAAOf,IAAOO,IAAV,KACO,SAAAC,GAAK,OAAIA,EAAMQ,SAAW,OAAS,UAcrCC,EAVD,WACb,OACC,kBAAC,EAAD,KACC,kBAACF,EAAD,4EACA,kBAACA,EAAD,wFACA,kBAACA,EAAD,CAAMC,SAAU,SAAhB,8B,qPClBH,IAAMV,EAAYN,IAAOO,IAAV,KAMTW,EAAUlB,YAAOmB,IAAPnB,CAAH,KAcEoB,EARG,WACd,OACI,kBAAC,EAAD,KACI,kBAACF,EAAD,CAASG,QAAQ,YAAYZ,MAAM,WAAnC,gD,qHChBZ,IAAMM,EAAOf,IAAOO,IAAV,KAgBKe,EAZH,WACR,OACC,4BACF,4BAAI,kBAAC,EAAD,oNACJ,4BAAI,kBAAC,EAAD,sLACJ,4BAAI,kBAAC,EAAD,4IACJ,4BAAI,kBAAC,EAAD,uK,oGCNP,IAAMhB,EAAYN,IAAOO,IAAV,KAeAG,eAVG,SAACF,GACf,OACI,kBAAC,EAAcA,EACpB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,U,wKCZH,IAAMF,EAAYN,IAAOO,IAAV,KAgBAgB,EATO,WAClB,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,gICbZ,IAAMjB,EAAYN,IAAOO,IAAV,KAaAiB,EARM,WACjB,OACI,kBAAC,EAAD,mC,gBCWOlB,MAhBf,WACC,IAAMK,EAAQc,cACRC,EAAYC,YAAchB,EAAMiB,YAAYC,GAAG,OAErD,OACC,kBAAC,WAAD,KACEH,GACD,kBAAC,EAAD,OAEEA,GACF,kBAAC,EAAD,Q,wCCLGI,GAAMC,YAAO,CAAEC,QAAQ,GAAD,mBAAMC,cAAYD,SAAlB,CAA2BE,UA2BxCC,OAxBf,WACC,IAAMxB,EAAQyB,YAAe,CAC5BC,UAAW,MACRzB,QAAS,CACLC,QAASyB,IACTC,UAAWC,KAElBC,WAAY,CAEXC,WAAY,CACX,gBAKH,OACC,kBAACC,EAAA,EAAD,CAAehC,MAAOA,GACrB,kBAACiC,EAAA,EAAD,CAAgBd,IAAKA,IACpB,kBAAC,EAAD,SCnBgBe,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d77cd48d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main.c4de7e96.jpg\";","import React from 'react';\nimport mainImage from \"../assets/main.jpg\";\nimport styled from \"@emotion/styled\";\n\nconst Image = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n`;\n\nconst Gallery = () => {\n    return (\n        <Image src={mainImage}  alt={\"hi\"} />\n    );\n};\n\nexport default Gallery;\n","import React from 'react';\nimport Gallery from \"../components/Gallery\";\nimport styled from \"@emotion/styled\";\nimport {withTheme} from \"@material-ui/core\";\n\nconst Container = styled.div`\n\tflex: 7;\n\tcolor: ${props => props.color }\n`;\n\nconst LeftSide = ({theme}) => {\n\treturn (\n\t\t<Container color={theme.palette.primary.main}>\n\t\t\t<Gallery/>\n\t\t</Container>\n\t);\n};\n\nexport default withTheme(LeftSide);\n","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\ttext-align: right;\n\tmargin-bottom: 30px;\n\tline-height: 30px;\n`;\n\nconst Text = styled.div`\n    font-size: ${props => props.fontSize ? \"15px\" : \"20px\"};\n    font-weight: bold;\n    letter-spacing: 1px;\n`;\nconst Title = () => {\n\treturn (\n\t\t<Container>\n\t\t\t<Text>הדס אופנהיים</Text>\n\t\t\t<Text>קלינאית תקשורת</Text>\n\t\t\t<Text fontSize={\"small\"}>חיפה</Text>\n\t\t</Container>\n\t);\n};\n\nexport default Title;\n","import React, {Fragment} from 'react';\nimport styled from \"@emotion/styled\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: row;\n\tmargin-bottom: 30px;\n`;\n\nconst WButton = styled(Button)`\n\tflex: 1;\n\theight: 50px;\n`;\n\n\nconst ContactUs = () => {\n    return (\n        <Container>\n            <WButton variant=\"contained\" color=\"primary\">וואטסאפ</WButton>\n        </Container>\n    );\n};\n\nexport default ContactUs;\n","import React, {Fragment} from 'react';\nimport styled from \"@emotion/styled\";\n\nconst Text = styled.div`\n    font-size: 16px;\n    line-height: 40px;\n`;\nconst Bio = () => {\n    return (\n    \t<ul>\n\t\t\t<li><Text>מתמחה באבחון וטיפול בילדים בגילאים 3 עד 6.</Text></li>\n\t\t\t<li><Text>בוגרת תואר ראשון בקלינאות תקשורת</Text></li>\n\t\t\t<li><Text> בעלת הסמכה בהתפתחות הילד</Text></li>\n\t\t\t<li><Text>מטפלת בקשיי תקשורת, שפה והיגוי</Text></li>\n\n\t\t</ul>\n    );\n};\n\nexport default Bio;\n","import React from 'react';\nimport styled from \"@emotion/styled\";\nimport {withTheme} from \"@material-ui/core\";\nimport Title from \"../components/Title\";\nimport ContactUs from \"../components/ContactUs\";\nimport Bio from \"../components/Bio\";\n\nconst Container = styled.div`\n\tmargin: 50px;\n\tflex: 3;\n`;\n\nconst RightSide = (props) => {\n    return (\n        <Container {...props}>\n\t\t\t<Title/>\n\t\t\t<ContactUs />\n\t\t\t<Bio />\n\t\t</Container>\n    );\n};\n\nexport default withTheme(RightSide);\n","import React from 'react';\nimport LeftSide from \"./LeftSide\";\nimport RightSide from \"./RightSide\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex-direction: row-reverse;\t\n\tmin-height: 100vh;\n\tmin-width: 100vw;\t\n`;\n\nconst DesktopLayout = () => {\n    return (\n        <Container>\n            <LeftSide />\n            <RightSide />\n        </Container>\n    );\n};\n\nexport default DesktopLayout;\n","import React from 'react';\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: column;\n`;\nconst MobileLayout = () => {\n    return (\n        <Container>\n\t\t\tMobile view not ready yet\n        </Container>\n    );\n};\n\nexport default MobileLayout;\n","import React, {Fragment} from 'react';\nimport DesktopLayout from \"./desktop/DesktopLayout\";\nimport MobileLayout from \"./mobile/MobileLayout\";\nimport {useMediaQuery, useTheme} from \"@material-ui/core\";\n\nfunction Container() {\n\tconst theme = useTheme();\n\tconst isDesktop = useMediaQuery(theme.breakpoints.up('sm'));\n\n\treturn (\n\t\t<Fragment>\n\t\t\t{isDesktop &&\n\t\t\t<DesktopLayout/>\n\t\t\t}\n\t\t\t{!isDesktop &&\n\t\t\t<MobileLayout/>\n\t\t\t}\n\t\t</Fragment>\n\t);\n}\n\nexport default Container;\n","import React from 'react';\nimport {createMuiTheme} from \"@material-ui/core\";\nimport {ThemeProvider} from '@material-ui/styles';\nimport {blue, grey, purple} from \"@material-ui/core/colors\";\nimport Container from \"./Container\";\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\n\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\n\nfunction App() {\n\tconst theme = createMuiTheme({\n\t\tdirection: 'rtl',\n\t    palette: {\n\t        primary: purple,\n\t        secondary: grey\n\t    },\n\t\ttypography: {\n\t\t\t// Use the system font instead of the default Roboto font.\n\t\t\tfontFamily: [\n\t\t\t\t'Assistant'\n\t\t\t]\n\t\t}\n\t});\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<StylesProvider jss={jss}>\n\t\t\t\t<Container/>\n\t\t\t</StylesProvider>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}