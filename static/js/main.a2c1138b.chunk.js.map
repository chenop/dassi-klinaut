{"version":3,"sources":["assets/main.jpg","Context.js","components/Image.js","components/Title.js","components/Gallery.js","desktop/LeftSide.js","components/ContactUs.js","components/Bio.js","desktop/RightSide.js","desktop/DesktopLayout.js","mobile/MobileLayout.js","Container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Context","React","createContext","Container","styled","div","BackgroundImage","mainImage","props","isDesktop","Image","useContext","Text","Typography","color","Title","variant","TitleContainer","Gallery","withTheme","theme","palette","primary","main","ColorButton","withStyles","root","flex","width","height","backgroundColor","darken","Button","ContactUs","whatsAppLink","target","href","fontSize","style","marginLeft","Line","text","ListItem","ListItemIcon","Bio","List","DesktopLayout","MobileLayout","useTheme","useMediaQuery","breakpoints","up","state","Provider","value","jss","create","plugins","jssPreset","rtl","App","createMuiTheme","direction","purple","secondary","grey","typography","fontFamily","ThemeProvider","StylesProvider","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2c1138b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main.c4de7e96.jpg\";","import React from \"react\";\n\nexport const Context = React.createContext(null);\n","import React from 'react';\nimport styled from \"@emotion/styled\";\nimport mainImage from \"../assets/main.jpg\";\nimport {Context} from \"../Context\";\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n    overflow-y: hidden;\n`;\n\nconst BackgroundImage = styled.div`\n\tbackground-image: url(${mainImage});\n\twidth: 100vw;\n    height: 100%;//${props => props.isDesktop ? \"100vh\" : \"40vh\"};\n    background-position: center;\n    background-size: cover;\n`;\n\nconst Image = () => {\n\tconst {isDesktop} = React.useContext(Context);\n\n\treturn (\n\t\t<Container>\n\t\t\t<BackgroundImage isDesktop={isDesktop}/>\n\t\t</Container>\n\t);\n};\n\nexport default Image;\n","import React from 'react';\nimport styled from \"@emotion/styled\";\nimport {Typography} from \"@material-ui/core\";\n\nconst Container = styled.div`\n\tflex-direction: column;\n\tjustify-content: center;\n\talign-items: center;\n\ttext-align: right;\n\tmargin-bottom: ${props => props.isDesktop ? \"30px\" : \"0px\"};\n\tline-height: 30px;\n`;\n\nconst Text = styled(Typography)`\n    letter-spacing: 1px;\n    color: ${props=> props.color}\n`;\nconst Title = ({color = \"black\"}) => {\n\treturn (\n\t\t<Container>\n\t\t\t<Text variant={\"h4\"} color={color}>הדס אופנהיים</Text>\n\t\t\t<Text variant={\"h4\"} color={color}>קלינאית תקשורת</Text>\n\t\t\t<Text variant={\"h6\"} color={color}>חיפה</Text>\n\t\t</Container>\n\t);\n};\n\nexport default Title;\n","import React from 'react';\nimport Image from \"./Image\";\nimport {Context} from \"../Context\";\nimport styled from \"@emotion/styled\";\nimport Title from \"./Title\";\n\nconst Container = styled.div`\n\tdisplay: flex;\n    width: 100vw;\n    height: ${props => props.isDesktop ? \"100vh\" : \"40vh\"};\n\tposition: relative;\n`;\nconst TitleContainer = styled.div`\n\tdisplay: flex;\n\tposition: absolute;\n\tflex-direction: column;\n\tjustify-content: flex-end;\n\talign-items: center;\n\theight: 100%;\n\twidth: 100%;\n`;\n\nconst Gallery = () => {\n\tconst {isDesktop} = React.useContext(Context);\n\n\treturn (\n\t\t<Container isDesktop={isDesktop}>\n\t\t\t<Image/>\n\t\t\t{!isDesktop &&\n\t\t\t<TitleContainer>\n\t\t\t\t<Title color=\"white\"/>\n\t\t\t</TitleContainer>\n\t\t\t}\n\t\t</Container>\n\t);\n};\n\nexport default Gallery;\n","import React from 'react';\nimport Gallery from \"../components/Gallery\";\nimport styled from \"@emotion/styled\";\nimport {withTheme} from \"@material-ui/core\";\n\nconst Container = styled.div`\n\twidth: 70%;\n\tcolor: ${props => props.color };\n`;\n\nconst LeftSide = ({theme}) => {\n\treturn (\n\t\t<Container color={theme.palette.primary.main}>\n\t\t\t<Gallery />\n\t\t</Container>\n\t);\n};\n\nexport default withTheme(LeftSide);\n","import React from 'react';\nimport styled from \"@emotion/styled\";\nimport WhatsAppIcon from '@material-ui/icons/WhatsApp';\nimport {Typography, withStyles} from \"@material-ui/core\";\nimport {lightGreen} from \"@material-ui/core/colors\";\nimport Button from \"@material-ui/core/Button\";\nimport {darken} from \"@material-ui/core/styles\";\n\nconst phoneNumber = '972525659084';\nconst message = 'הגענו מהאתר שלך, נשמח לשוחח!';\n\nconst Container = styled.div`\n\tflex-direction: row;\n\tflex: 1;\n\tjustify-content: center;\n\ttext-align: center;\n`;\n\nconst ColorButton = withStyles(theme => ({\n    root: {\n        color: \"white\",\n        flex: 1,\n        width: \"80%\",\n        height: \"50px\",\n        backgroundColor: \"#DB898B\",\n        '&:hover': {\n            backgroundColor: darken(\"#DB898B\", 0.1),\n        },\n    },\n}))(Button);\n\nconst ContactUs = () => {\n    const whatsAppLink = `https://web.whatsapp.com/send?phone=${phoneNumber}&text=${message}`;\n\n    return (\n        <Container>\n            <ColorButton variant=\"contained\" target=\"_blank\" href={whatsAppLink}>\n                <WhatsAppIcon fontSize=\"large\" style={{marginLeft: \"10px\", color: \"white\"}}/>\n                <Typography variant={\"h6\"} style={{color: \"white\"}}>צור קשר</Typography>\n            </ColorButton>\n        </Container>\n    );\n};\n\nexport default ContactUs;\n","import React, {Fragment} from 'react';\nimport styled from \"@emotion/styled\";\nimport {ListItemText, Typography} from \"@material-ui/core\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nconst Text = styled(Typography)`\n    font-size: 30px;\n    line-height: 40px;\n`;\n\nconst Line = ({text}) => {\n    return (\n\t\t<ListItem><ListItemIcon><ChevronLeftIcon /></ListItemIcon><Text variant={\"h6\"}>{text}</Text></ListItem>\n    );\n};\n\nconst Bio = () => {\n    return (\n    \t<List>\n\t\t\t<Line text=\"מתמחה באבחון וטיפול בילדים בגילאים 3 עד 6.\" />\n\t\t\t<Line text=\"בוגרת תואר ראשון בקלינאות תקשורת\" />\n\t\t\t<Line text=\"בעלת הסמכה בהתפתחות הילד\" />\n\t\t\t<Line text=\"מטפלת בקשיי תקשורת, שפה והיגוי \" />\n\t\t</List>\n    );\n};\n\nexport default Bio;\n","import React from 'react';\nimport styled from \"@emotion/styled\";\nimport {withTheme} from \"@material-ui/core\";\nimport Title from \"../components/Title\";\nimport ContactUs from \"../components/ContactUs\";\nimport Bio from \"../components/Bio\";\n\nconst Container = styled.div`\n\twidth: 30%;\n\tpadding: 50px;\n`;\n\nconst RightSide = (props) => {\n    return (\n        <Container {...props}>\n\t\t\t<Title/>\n\t\t\t<ContactUs />\n\t\t\t<Bio />\n\t\t</Container>\n    );\n};\n\nexport default withTheme(RightSide);\n","import React from 'react';\nimport LeftSide from \"./LeftSide\";\nimport RightSide from \"./RightSide\";\nimport styled from \"@emotion/styled\";\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: row-reverse;\t\n\tmax-width: 100vw;\n\tmax-height: 100vh;\n`;\n\nconst DesktopLayout = () => {\n    return (\n        <Container>\n            <LeftSide />\n            <RightSide />\n        </Container>\n    );\n};\n\nexport default DesktopLayout;\n","import React from 'react';\nimport styled from \"@emotion/styled\";\nimport Gallery from \"../components/Gallery\";\nimport ContactUs from \"../components/ContactUs\";\nimport Bio from \"../components/Bio\";\n\nconst Container = styled.div`\n\tdisplay: flex;\n\tflex: 1;\n\tflex-direction: column;\n\tmax-width: 100vw;\n\tposition: relative;\n`;\nconst MobileLayout = () => {\n    return (\n        <Container>\n\t\t\t<Gallery />\n\t\t\t<ContactUs/>\n\t\t\t<Bio/>\n        </Container>\n    );\n};\n\nexport default MobileLayout;\n","import React, {Fragment} from 'react';\nimport DesktopLayout from \"./desktop/DesktopLayout\";\nimport MobileLayout from \"./mobile/MobileLayout\";\nimport {useMediaQuery, useTheme} from \"@material-ui/core\";\nimport {Context} from \"./Context\";\n\nfunction Container() {\n\tconst theme = useTheme();\n\tconst isDesktop = useMediaQuery(theme.breakpoints.up('sm'));\n\n\tconst state = {\n\t\tisDesktop\n\t};\n\n\treturn (\n\t\t<Context.Provider value={state}>\n\t\t\t{isDesktop &&\n\t\t\t<DesktopLayout/>\n\t\t\t}\n\t\t\t{!isDesktop &&\n\t\t\t<MobileLayout/>\n\t\t\t}\n\t\t</Context.Provider>\n\t);\n}\n\nexport default Container;\n","import React from 'react';\nimport {createMuiTheme} from \"@material-ui/core\";\nimport {ThemeProvider} from '@material-ui/styles';\nimport {blue, grey, purple} from \"@material-ui/core/colors\";\nimport Container from \"./Container\";\nimport { create } from 'jss';\nimport rtl from 'jss-rtl';\nimport { StylesProvider, jssPreset } from '@material-ui/core/styles';\n\n// Configure JSS\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\n\n\nfunction App() {\n\tconst theme = createMuiTheme({\n\t\tdirection: 'rtl',\n\t    palette: {\n\t        primary: purple,\n\t        secondary: grey\n\t    },\n\t\ttypography: {\n\t\t\t// Use the system font instead of the default Roboto font.\n\t\t\tfontFamily: [\n\t\t\t\t'Assistant'\n\t\t\t]\n\t\t}\n\t});\n\n\treturn (\n\t\t<ThemeProvider theme={theme}>\n\t\t\t<StylesProvider jss={jss}>\n\t\t\t\t<Container/>\n\t\t\t</StylesProvider>\n\t\t</ThemeProvider>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}